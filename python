import tflite_runtime.interpreter as tflite
import RPi.GPIO as GPIO
import time

# Define GPIO pin for LED
LED_PIN = 18

# Initialize GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(LED_PIN, GPIO.OUT)

# Load TensorFlow Lite model
interpreter = tflite.Interpreter(model_path="person_detection_model.tflite")
interpreter.allocate_tensors()

# Get input and output tensors
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# Function to perform inference and control LED
def detect_person_and_blink(input_data):
    # Perform inference
    interpreter.set_tensor(input_details[0]['index'], input_data)
    interpreter.invoke()
    output_data = interpreter.get_tensor(output_details[0]['index'])

    # Check if person is detected
    if output_data[0][1] > 0.5:  # Assuming index 1 corresponds to person class
        # Blink the LED
        GPIO.output(LED_PIN, GPIO.HIGH)
        time.sleep(0.5)
        GPIO.output(LED_PIN, GPIO.LOW)

# Sample input data (replace with your actual input data)
sample_input_data = ...  # Your input data for inference

# Call the function with the sample input data
detect_person_and_blink(sample_input_data)

# Cleanup GPIO
GPIO.cleanup()
