import tensorflow as tf
import RPi.GPIO as GPIO
import time
from picamera import PiCamera
from PIL import Image
import numpy as np

# Set up GPIO
GPIO.setmode(GPIO.BOARD)
LED_PIN = 11  # Assuming the LED is connected to GPIO pin 11
GPIO.setup(LED_PIN, GPIO.OUT)

# Load the pre-trained model for person detection
model = tf.saved_model.load('path_to_your_model')

# Define the labels
LABELS = ['person']

# Function to detect person using TensorFlow model
def detect_person(image):
    input_tensor = tf.convert_to_tensor(image)
    input_tensor = input_tensor[tf.newaxis,...]

    detections = model(input_tensor)

    for i in range(detections['num_detections']):
        class_id = int(detections['detection_classes'][0][i])
        if LABELS[class_id-1] == 'person' and detections['detection_scores'][0][i] > 0.5:
            return True
    return False

# Main function for blinking LED when person is detected
def main():
    camera = PiCamera()
    camera.resolution = (640, 480)

    while True:
        image = np.empty((480, 640, 3), dtype=np.uint8)
        camera.capture(image, 'rgb')
        if detect_person(image):
            GPIO.output(LED_PIN, GPIO.HIGH)  # Turn on LED
            time.sleep(1)  # LED on for 1 second
            GPIO.output(LED_PIN, GPIO.LOW)  # Turn off LED
        else:
            time.sleep(1)  # If no person detected, wait for 1 second before checking again

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        GPIO.cleanup()  # Clean up GPIO on Ctrl+C exit
